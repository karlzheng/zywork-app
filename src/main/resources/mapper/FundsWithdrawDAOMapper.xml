<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.FundsWithdrawDAO">

    <insert id="save" parameterType="fundsWithdrawDO">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
        insert into t_funds_withdraw
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
				user_id,
			</if>
			<if test="transactionNo != null">
				transaction_no,
			</if>
			<if test="amount != null">
				amount,
			</if>
			<if test="bankcardId != null">
				bankcard_id,
			</if>
			<if test="withdrawStatus != null">
				withdraw_status,
			</if>
			<if test="withdrawDescription != null">
				withdraw_description,
			</if>
			<if test="checkedUserId != null">
				checked_user_id,
			</if>
			<if test="checkedTime != null">
				checked_time,
			</if>
			<if test="completeTime != null">
				complete_time,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="isActive != null">
				is_active,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
				#{userId},
			</if>
			<if test="transactionNo != null">
				#{transactionNo},
			</if>
			<if test="amount != null">
				#{amount},
			</if>
			<if test="bankcardId != null">
				#{bankcardId},
			</if>
			<if test="withdrawStatus != null">
				#{withdrawStatus},
			</if>
			<if test="withdrawDescription != null">
				#{withdrawDescription},
			</if>
			<if test="checkedUserId != null">
				#{checkedUserId},
			</if>
			<if test="checkedTime != null">
				#{checkedTime},
			</if>
			<if test="completeTime != null">
				#{completeTime},
			</if>
			<if test="version != null">
				#{version},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="isActive != null">
				#{isActive},
			</if>
			
        </trim>
    </insert>

    <insert id="saveBatch" parameterType="java.util.List">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
    	<foreach collection="list" item="item" separator=";">
            insert into t_funds_withdraw
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.userId != null">
				user_id,
			</if>
			<if test="item.transactionNo != null">
				transaction_no,
			</if>
			<if test="item.amount != null">
				amount,
			</if>
			<if test="item.bankcardId != null">
				bankcard_id,
			</if>
			<if test="item.withdrawStatus != null">
				withdraw_status,
			</if>
			<if test="item.withdrawDescription != null">
				withdraw_description,
			</if>
			<if test="item.checkedUserId != null">
				checked_user_id,
			</if>
			<if test="item.checkedTime != null">
				checked_time,
			</if>
			<if test="item.completeTime != null">
				complete_time,
			</if>
			<if test="item.version != null">
				version,
			</if>
			<if test="item.createTime != null">
				create_time,
			</if>
			<if test="item.updateTime != null">
				update_time,
			</if>
			<if test="item.isActive != null">
				is_active,
			</if>
			
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="item.userId != null">
				#{item.userId},
			</if>
			<if test="item.transactionNo != null">
				#{item.transactionNo},
			</if>
			<if test="item.amount != null">
				#{item.amount},
			</if>
			<if test="item.bankcardId != null">
				#{item.bankcardId},
			</if>
			<if test="item.withdrawStatus != null">
				#{item.withdrawStatus},
			</if>
			<if test="item.withdrawDescription != null">
				#{item.withdrawDescription},
			</if>
			<if test="item.checkedUserId != null">
				#{item.checkedUserId},
			</if>
			<if test="item.checkedTime != null">
				#{item.checkedTime},
			</if>
			<if test="item.completeTime != null">
				#{item.completeTime},
			</if>
			<if test="item.version != null">
				#{item.version},
			</if>
			<if test="item.createTime != null">
				#{item.createTime},
			</if>
			<if test="item.updateTime != null">
				#{item.updateTime},
			</if>
			<if test="item.isActive != null">
				#{item.isActive},
			</if>
			
            </trim>
        </foreach>
    </insert>

    <delete id="removeById" parameterType="long">
        delete from t_funds_withdraw where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_funds_withdraw where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="fundsWithdrawDO">
        update t_funds_withdraw
        <set>
            <if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="transactionNo != null">
				transaction_no = #{transactionNo},
			</if>
			<if test="amount != null">
				amount = #{amount},
			</if>
			<if test="bankcardId != null">
				bankcard_id = #{bankcardId},
			</if>
			<if test="withdrawStatus != null">
				withdraw_status = #{withdrawStatus},
			</if>
			<if test="withdrawDescription != null">
				withdraw_description = #{withdrawDescription},
			</if>
			<if test="checkedUserId != null">
				checked_user_id = #{checkedUserId},
			</if>
			<if test="checkedTime != null">
				checked_time = #{checkedTime},
			</if>
			<if test="completeTime != null">
				complete_time = #{completeTime},
			</if>
			<if test="version != null">
				version = #{version},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="isActive != null">
				is_active = #{isActive},
			</if>
			update_time = CURRENT_TIMESTAMP,
        </set>
        where id = #{id} and version + 1 <![CDATA[<=]]> #{version}
    </update>

    <update id="updateBatch" parameterType="java.util.List">
    	<foreach collection="list" item="item" separator=";">
            update t_funds_withdraw
            <set>
                <if test="item.userId != null">
				user_id = #{item.userId},
			</if>
			<if test="item.transactionNo != null">
				transaction_no = #{item.transactionNo},
			</if>
			<if test="item.amount != null">
				amount = #{item.amount},
			</if>
			<if test="item.bankcardId != null">
				bankcard_id = #{item.bankcardId},
			</if>
			<if test="item.withdrawStatus != null">
				withdraw_status = #{item.withdrawStatus},
			</if>
			<if test="item.withdrawDescription != null">
				withdraw_description = #{item.withdrawDescription},
			</if>
			<if test="item.checkedUserId != null">
				checked_user_id = #{item.checkedUserId},
			</if>
			<if test="item.checkedTime != null">
				checked_time = #{item.checkedTime},
			</if>
			<if test="item.completeTime != null">
				complete_time = #{item.completeTime},
			</if>
			<if test="item.version != null">
				version = #{item.version},
			</if>
			<if test="item.createTime != null">
				create_time = #{item.createTime},
			</if>
			<if test="item.updateTime != null">
				update_time = #{item.updateTime},
			</if>
			<if test="item.isActive != null">
				is_active = #{item.isActive},
			</if>
			update_time = CURRENT_TIMESTAMP,
                <if test="item.version == null">
                    version = version + 1,
                </if>
            </set>
            where id = #{item.id}
        </foreach>
    </update>

    <sql id="select_columns">
        id as id, user_id as userId, transaction_no as transactionNo, amount as amount, bankcard_id as bankcardId, withdraw_status as withdrawStatus, withdraw_description as withdrawDescription, checked_user_id as checkedUserId, checked_time as checkedTime, complete_time as completeTime, version as version, create_time as createTime, update_time as updateTime, is_active as isActive
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.id != null">
			and id = #{query.id}
		</if>
		<if test="query != null and query.idMin != null and query.idMax == null">
			and id <![CDATA[ >= ]]> #{query.idMin}
		</if>
		<if test="query != null and query.idMin == null and query.idMax != null">
			and id <![CDATA[ <= ]]> #{query.idMax}
		</if>
		<if test="query != null and query.idMin != null and query.idMax != null">
			and id <![CDATA[ >= ]]> #{query.idMin} and id <![CDATA[ <= ]]> #{query.idMax}
		</if>
		<if test="query != null and query.userId != null">
			and user_id = #{query.userId}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax == null">
			and user_id <![CDATA[ >= ]]> #{query.userIdMin}
		</if>
		<if test="query != null and query.userIdMin == null and query.userIdMax != null">
			and user_id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax != null">
			and user_id <![CDATA[ >= ]]> #{query.userIdMin} and user_id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.transactionNo != null and query.transactionNo != ''">
			and transaction_no like concat('%', #{query.transactionNo}, '%')
		</if>
		<if test="query != null and query.amount != null">
			and amount = #{query.amount}
		</if>
		<if test="query != null and query.amountMin != null and query.amountMax == null">
			and amount <![CDATA[ >= ]]> #{query.amountMin}
		</if>
		<if test="query != null and query.amountMin == null and query.amountMax != null">
			and amount <![CDATA[ <= ]]> #{query.amountMax}
		</if>
		<if test="query != null and query.amountMin != null and query.amountMax != null">
			and amount <![CDATA[ >= ]]> #{query.amountMin} and amount <![CDATA[ <= ]]> #{query.amountMax}
		</if>
		<if test="query != null and query.bankcardId != null">
			and bankcard_id = #{query.bankcardId}
		</if>
		<if test="query != null and query.bankcardIdMin != null and query.bankcardIdMax == null">
			and bankcard_id <![CDATA[ >= ]]> #{query.bankcardIdMin}
		</if>
		<if test="query != null and query.bankcardIdMin == null and query.bankcardIdMax != null">
			and bankcard_id <![CDATA[ <= ]]> #{query.bankcardIdMax}
		</if>
		<if test="query != null and query.bankcardIdMin != null and query.bankcardIdMax != null">
			and bankcard_id <![CDATA[ >= ]]> #{query.bankcardIdMin} and bankcard_id <![CDATA[ <= ]]> #{query.bankcardIdMax}
		</if>
		<if test="query != null and query.withdrawStatus != null">
			and withdraw_status = #{query.withdrawStatus}
		</if>
		<if test="query != null and query.withdrawStatusMin != null and query.withdrawStatusMax == null">
			and withdraw_status <![CDATA[ >= ]]> #{query.withdrawStatusMin}
		</if>
		<if test="query != null and query.withdrawStatusMin == null and query.withdrawStatusMax != null">
			and withdraw_status <![CDATA[ <= ]]> #{query.withdrawStatusMax}
		</if>
		<if test="query != null and query.withdrawStatusMin != null and query.withdrawStatusMax != null">
			and withdraw_status <![CDATA[ >= ]]> #{query.withdrawStatusMin} and withdraw_status <![CDATA[ <= ]]> #{query.withdrawStatusMax}
		</if>
		<if test="query != null and query.withdrawDescription != null and query.withdrawDescription != ''">
			and withdraw_description like concat('%', #{query.withdrawDescription}, '%')
		</if>
		<if test="query != null and query.checkedUserId != null">
			and checked_user_id = #{query.checkedUserId}
		</if>
		<if test="query != null and query.checkedUserIdMin != null and query.checkedUserIdMax == null">
			and checked_user_id <![CDATA[ >= ]]> #{query.checkedUserIdMin}
		</if>
		<if test="query != null and query.checkedUserIdMin == null and query.checkedUserIdMax != null">
			and checked_user_id <![CDATA[ <= ]]> #{query.checkedUserIdMax}
		</if>
		<if test="query != null and query.checkedUserIdMin != null and query.checkedUserIdMax != null">
			and checked_user_id <![CDATA[ >= ]]> #{query.checkedUserIdMin} and checked_user_id <![CDATA[ <= ]]> #{query.checkedUserIdMax}
		</if>
		<if test="query != null and query.checkedTime != null">
			and checked_time = #{query.checkedTime}
		</if>
		<if test="query != null and query.checkedTimeMin != null and query.checkedTimeMax == null">
			and checked_time <![CDATA[ >= ]]> #{query.checkedTimeMin}
		</if>
		<if test="query != null and query.checkedTimeMin == null and query.checkedTimeMax != null">
			and checked_time <![CDATA[ <= ]]> #{query.checkedTimeMax}
		</if>
		<if test="query != null and query.checkedTimeMin != null and query.checkedTimeMax != null">
			and checked_time <![CDATA[ >= ]]> #{query.checkedTimeMin} and checked_time <![CDATA[ <= ]]> #{query.checkedTimeMax}
		</if>
		<if test="query != null and query.completeTime != null">
			and complete_time = #{query.completeTime}
		</if>
		<if test="query != null and query.completeTimeMin != null and query.completeTimeMax == null">
			and complete_time <![CDATA[ >= ]]> #{query.completeTimeMin}
		</if>
		<if test="query != null and query.completeTimeMin == null and query.completeTimeMax != null">
			and complete_time <![CDATA[ <= ]]> #{query.completeTimeMax}
		</if>
		<if test="query != null and query.completeTimeMin != null and query.completeTimeMax != null">
			and complete_time <![CDATA[ >= ]]> #{query.completeTimeMin} and complete_time <![CDATA[ <= ]]> #{query.completeTimeMax}
		</if>
		<if test="query != null and query.version != null">
			and version = #{query.version}
		</if>
		<if test="query != null and query.versionMin != null and query.versionMax == null">
			and version <![CDATA[ >= ]]> #{query.versionMin}
		</if>
		<if test="query != null and query.versionMin == null and query.versionMax != null">
			and version <![CDATA[ <= ]]> #{query.versionMax}
		</if>
		<if test="query != null and query.versionMin != null and query.versionMax != null">
			and version <![CDATA[ >= ]]> #{query.versionMin} and version <![CDATA[ <= ]]> #{query.versionMax}
		</if>
		<if test="query != null and query.createTime != null">
			and create_time = #{query.createTime}
		</if>
		<if test="query != null and query.createTimeMin != null and query.createTimeMax == null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeMin}
		</if>
		<if test="query != null and query.createTimeMin == null and query.createTimeMax != null">
			and create_time <![CDATA[ <= ]]> #{query.createTimeMax}
		</if>
		<if test="query != null and query.createTimeMin != null and query.createTimeMax != null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeMin} and create_time <![CDATA[ <= ]]> #{query.createTimeMax}
		</if>
		<if test="query != null and query.updateTime != null">
			and update_time = #{query.updateTime}
		</if>
		<if test="query != null and query.updateTimeMin != null and query.updateTimeMax == null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeMin}
		</if>
		<if test="query != null and query.updateTimeMin == null and query.updateTimeMax != null">
			and update_time <![CDATA[ <= ]]> #{query.updateTimeMax}
		</if>
		<if test="query != null and query.updateTimeMin != null and query.updateTimeMax != null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeMin} and update_time <![CDATA[ <= ]]> #{query.updateTimeMax}
		</if>
		<if test="query != null and query.isActive != null">
			and is_active = #{query.isActive}
		</if>
		<if test="query != null and query.isActiveMin != null and query.isActiveMax == null">
			and is_active <![CDATA[ >= ]]> #{query.isActiveMin}
		</if>
		<if test="query != null and query.isActiveMin == null and query.isActiveMax != null">
			and is_active <![CDATA[ <= ]]> #{query.isActiveMax}
		</if>
		<if test="query != null and query.isActiveMin != null and query.isActiveMax != null">
			and is_active <![CDATA[ >= ]]> #{query.isActiveMin} and is_active <![CDATA[ <= ]]> #{query.isActiveMax}
		</if>
		
    </sql>

    <select id="getById" parameterType="long" resultType="fundsWithdrawDO">
        select
        <include refid="select_columns"/>
        from t_funds_withdraw where id = #{id}
    </select>

    <select id="getVersionById" parameterType="long" resultType="integer">
        select version from t_funds_withdraw where id = #{id}
    </select>

    <select id="listAll" resultType="fundsWithdrawDO">
        select
        <include refid="select_columns"/>
        from t_funds_withdraw
        order by update_time desc, create_time desc
    </select>

    <select id="listAllByCondition" resultType="fundsWithdrawDO">
        select
        <include refid="select_columns"/>
        from t_funds_withdraw
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
             ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            update_time desc, create_time desc
        </if>
    </select>

    <select id="listPageByCondition" resultType="fundsWithdrawDO">
        select
        <include refid="select_columns"/>
        from t_funds_withdraw
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
            ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            update_time desc, create_time desc
        </if>
        limit #{query.beginIndex}, #{query.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_funds_withdraw
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
