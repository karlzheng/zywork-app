<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.UserOrganizationDAO">

    <sql id="select_columns">
        t_user.id as userId, t_user.phone as userPhone, t_user.email as userEmail, t_organization.id as organizationId, t_organization.title as organizationTitle, t_organization.description as organizationDescription, t_user_organization.create_time as userOrganizationCreateTime, t_user_organization.update_time as userOrganizationUpdateTime
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.userId != null">
			and t_user.id = #{query.userId}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax == null">
			and t_user.id <![CDATA[ >= ]]> #{query.userIdMin}
		</if>
		<if test="query != null and query.userIdMin == null and query.userIdMax != null">
			and t_user.id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax != null">
			and t_user.id <![CDATA[ >= ]]> #{query.userIdMin} and t_user.id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.userPhone != null and query.userPhone != ''">
			and t_user.phone like concat('%', #{query.userPhone}, '%')
		</if>
		<if test="query != null and query.userEmail != null and query.userEmail != ''">
			and t_user.email like concat('%', #{query.userEmail}, '%')
		</if>
		<if test="query != null and query.organizationId != null">
			and t_organization.id = #{query.organizationId}
		</if>
		<if test="query != null and query.organizationIdMin != null and query.organizationIdMax == null">
			and t_organization.id <![CDATA[ >= ]]> #{query.organizationIdMin}
		</if>
		<if test="query != null and query.organizationIdMin == null and query.organizationIdMax != null">
			and t_organization.id <![CDATA[ <= ]]> #{query.organizationIdMax}
		</if>
		<if test="query != null and query.organizationIdMin != null and query.organizationIdMax != null">
			and t_organization.id <![CDATA[ >= ]]> #{query.organizationIdMin} and t_organization.id <![CDATA[ <= ]]> #{query.organizationIdMax}
		</if>
		<if test="query != null and query.organizationTitle != null and query.organizationTitle != ''">
			and t_organization.title like concat('%', #{query.organizationTitle}, '%')
		</if>
		<if test="query != null and query.organizationDescription != null and query.organizationDescription != ''">
			and t_organization.description like concat('%', #{query.organizationDescription}, '%')
		</if>
		<if test="query != null and query.userOrganizationCreateTime != null">
			and t_user_organization.create_time = #{query.userOrganizationCreateTime}
		</if>
		<if test="query != null and query.userOrganizationCreateTimeMin != null and query.userOrganizationCreateTimeMax == null">
			and t_user_organization.create_time <![CDATA[ >= ]]> #{query.userOrganizationCreateTimeMin}
		</if>
		<if test="query != null and query.userOrganizationCreateTimeMin == null and query.userOrganizationCreateTimeMax != null">
			and t_user_organization.create_time <![CDATA[ <= ]]> #{query.userOrganizationCreateTimeMax}
		</if>
		<if test="query != null and query.userOrganizationCreateTimeMin != null and query.userOrganizationCreateTimeMax != null">
			and t_user_organization.create_time <![CDATA[ >= ]]> #{query.userOrganizationCreateTimeMin} and t_user_organization.create_time <![CDATA[ <= ]]> #{query.userOrganizationCreateTimeMax}
		</if>
		<if test="query != null and query.userOrganizationUpdateTime != null">
			and t_user_organization.update_time = #{query.userOrganizationUpdateTime}
		</if>
		<if test="query != null and query.userOrganizationUpdateTimeMin != null and query.userOrganizationUpdateTimeMax == null">
			and t_user_organization.update_time <![CDATA[ >= ]]> #{query.userOrganizationUpdateTimeMin}
		</if>
		<if test="query != null and query.userOrganizationUpdateTimeMin == null and query.userOrganizationUpdateTimeMax != null">
			and t_user_organization.update_time <![CDATA[ <= ]]> #{query.userOrganizationUpdateTimeMax}
		</if>
		<if test="query != null and query.userOrganizationUpdateTimeMin != null and query.userOrganizationUpdateTimeMax != null">
			and t_user_organization.update_time <![CDATA[ >= ]]> #{query.userOrganizationUpdateTimeMin} and t_user_organization.update_time <![CDATA[ <= ]]> #{query.userOrganizationUpdateTimeMax}
		</if>
		
        and
        t_user.id = t_user_organization.user_id and t_organization.id = t_user_organization.organization_id
    </sql>

    <select id="listById" parameterType="long" resultType="userOrganizationDO">
        select
        <include refid="select_columns"/>
        from t_user, t_organization, t_user_organization where t_user.id = #{id} and
        t_user.id = t_user_organization.user_id and t_organization.id = t_user_organization.organization_id
    </select>

    <select id="listAll" resultType="userOrganizationDO">
        select
        <include refid="select_columns"/>
        from t_user, t_organization, t_user_organization
        where
        t_user.id = t_user_organization.user_id and t_organization.id = t_user_organization.organization_id
        order by t_user.update_time desc, t_user.create_time desc
    </select>

    <select id="listPageByCondition" resultType="userOrganizationDO">
        select
        <include refid="select_columns"/>
        from t_user, t_organization, t_user_organization
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
            ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            t_user.update_time desc, t_user.create_time desc
        </if>
        limit #{query.beginIndex}, #{query.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_user, t_organization, t_user_organization
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
