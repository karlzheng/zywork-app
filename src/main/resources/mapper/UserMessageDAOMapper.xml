<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.UserMessageDAO">

    <sql id="select_columns">
        t_user.id as userId, t_user.phone as userPhone, t_user.email as userEmail, t_message.id as messageId, t_message.title as messageTitle, t_message.summary as messageSummary, t_message.content as messageContent, t_message.message_type as messageMessageType, t_user_message.is_read as userMessageIsRead, t_user_message.create_time as userMessageCreateTime, t_user_message.update_time as userMessageUpdateTime
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.userId != null">
			and t_user.id = #{query.userId}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax == null">
			and t_user.id <![CDATA[ >= ]]> #{query.userIdMin}
		</if>
		<if test="query != null and query.userIdMin == null and query.userIdMax != null">
			and t_user.id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax != null">
			and t_user.id <![CDATA[ >= ]]> #{query.userIdMin} and t_user.id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.userPhone != null and query.userPhone != ''">
			and t_user.phone like concat('%', #{query.userPhone}, '%')
		</if>
		<if test="query != null and query.userEmail != null and query.userEmail != ''">
			and t_user.email like concat('%', #{query.userEmail}, '%')
		</if>
		<if test="query != null and query.messageId != null">
			and t_message.id = #{query.messageId}
		</if>
		<if test="query != null and query.messageIdMin != null and query.messageIdMax == null">
			and t_message.id <![CDATA[ >= ]]> #{query.messageIdMin}
		</if>
		<if test="query != null and query.messageIdMin == null and query.messageIdMax != null">
			and t_message.id <![CDATA[ <= ]]> #{query.messageIdMax}
		</if>
		<if test="query != null and query.messageIdMin != null and query.messageIdMax != null">
			and t_message.id <![CDATA[ >= ]]> #{query.messageIdMin} and t_message.id <![CDATA[ <= ]]> #{query.messageIdMax}
		</if>
		<if test="query != null and query.messageTitle != null and query.messageTitle != ''">
			and t_message.title like concat('%', #{query.messageTitle}, '%')
		</if>
		<if test="query != null and query.messageSummary != null and query.messageSummary != ''">
			and t_message.summary like concat('%', #{query.messageSummary}, '%')
		</if>
		<if test="query != null and query.messageContent != null and query.messageContent != ''">
			and t_message.content like concat('%', #{query.messageContent}, '%')
		</if>
		<if test="query != null and query.messageMessageType != null and query.messageMessageType != ''">
			and t_message.message_type like concat('%', #{query.messageMessageType}, '%')
		</if>
		<if test="query != null and query.userMessageIsRead != null">
			and t_user_message.is_read = #{query.userMessageIsRead}
		</if>
		<if test="query != null and query.userMessageIsReadMin != null and query.userMessageIsReadMax == null">
			and t_user_message.is_read <![CDATA[ >= ]]> #{query.userMessageIsReadMin}
		</if>
		<if test="query != null and query.userMessageIsReadMin == null and query.userMessageIsReadMax != null">
			and t_user_message.is_read <![CDATA[ <= ]]> #{query.userMessageIsReadMax}
		</if>
		<if test="query != null and query.userMessageIsReadMin != null and query.userMessageIsReadMax != null">
			and t_user_message.is_read <![CDATA[ >= ]]> #{query.userMessageIsReadMin} and t_user_message.is_read <![CDATA[ <= ]]> #{query.userMessageIsReadMax}
		</if>
		<if test="query != null and query.userMessageCreateTime != null">
			and t_user_message.create_time = #{query.userMessageCreateTime}
		</if>
		<if test="query != null and query.userMessageCreateTimeMin != null and query.userMessageCreateTimeMax == null">
			and t_user_message.create_time <![CDATA[ >= ]]> #{query.userMessageCreateTimeMin}
		</if>
		<if test="query != null and query.userMessageCreateTimeMin == null and query.userMessageCreateTimeMax != null">
			and t_user_message.create_time <![CDATA[ <= ]]> #{query.userMessageCreateTimeMax}
		</if>
		<if test="query != null and query.userMessageCreateTimeMin != null and query.userMessageCreateTimeMax != null">
			and t_user_message.create_time <![CDATA[ >= ]]> #{query.userMessageCreateTimeMin} and t_user_message.create_time <![CDATA[ <= ]]> #{query.userMessageCreateTimeMax}
		</if>
		<if test="query != null and query.userMessageUpdateTime != null">
			and t_user_message.update_time = #{query.userMessageUpdateTime}
		</if>
		<if test="query != null and query.userMessageUpdateTimeMin != null and query.userMessageUpdateTimeMax == null">
			and t_user_message.update_time <![CDATA[ >= ]]> #{query.userMessageUpdateTimeMin}
		</if>
		<if test="query != null and query.userMessageUpdateTimeMin == null and query.userMessageUpdateTimeMax != null">
			and t_user_message.update_time <![CDATA[ <= ]]> #{query.userMessageUpdateTimeMax}
		</if>
		<if test="query != null and query.userMessageUpdateTimeMin != null and query.userMessageUpdateTimeMax != null">
			and t_user_message.update_time <![CDATA[ >= ]]> #{query.userMessageUpdateTimeMin} and t_user_message.update_time <![CDATA[ <= ]]> #{query.userMessageUpdateTimeMax}
		</if>
		
        and
        t_user.id = t_user_message.user_id and t_message.id = t_user_message.message_id
    </sql>

    <select id="listById" parameterType="long" resultType="userMessageDO">
        select
        <include refid="select_columns"/>
        from t_user, t_message, t_user_message where t_user.id = #{id} and
        t_user.id = t_user_message.user_id and t_message.id = t_user_message.message_id
    </select>

    <select id="listAll" resultType="userMessageDO">
        select
        <include refid="select_columns"/>
        from t_user, t_message, t_user_message
        where
        t_user.id = t_user_message.user_id and t_message.id = t_user_message.message_id
        order by t_user.update_time desc, t_user.create_time desc
    </select>

    <select id="listPageByCondition" resultType="userMessageDO">
        select
        <include refid="select_columns"/>
        from t_user, t_message, t_user_message
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
            ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            t_user.update_time desc, t_user.create_time desc
        </if>
        limit #{query.beginIndex}, #{query.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_user, t_message, t_user_message
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
