<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.FundsTransferDAO">

    <insert id="save" parameterType="fundsTransferDO">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
        insert into t_funds_transfer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="transactionNo != null">
				transaction_no,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="amount != null">
				amount,
			</if>
			<if test="fromUserId != null">
				from_user_id,
			</if>
			<if test="toUserId != null">
				to_user_id,
			</if>
			<if test="transferType != null">
				transfer_type,
			</if>
			<if test="transferDescription != null">
				transfer_description,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="isActive != null">
				is_active,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="transactionNo != null">
				#{transactionNo},
			</if>
			<if test="userId != null">
				#{userId},
			</if>
			<if test="amount != null">
				#{amount},
			</if>
			<if test="fromUserId != null">
				#{fromUserId},
			</if>
			<if test="toUserId != null">
				#{toUserId},
			</if>
			<if test="transferType != null">
				#{transferType},
			</if>
			<if test="transferDescription != null">
				#{transferDescription},
			</if>
			<if test="version != null">
				#{version},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="isActive != null">
				#{isActive},
			</if>
			
        </trim>
    </insert>

    <insert id="saveBatch" parameterType="java.util.List">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
    	<foreach collection="list" item="item" separator=";">
            insert into t_funds_transfer
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.transactionNo != null">
				transaction_no,
			</if>
			<if test="item.userId != null">
				user_id,
			</if>
			<if test="item.amount != null">
				amount,
			</if>
			<if test="item.fromUserId != null">
				from_user_id,
			</if>
			<if test="item.toUserId != null">
				to_user_id,
			</if>
			<if test="item.transferType != null">
				transfer_type,
			</if>
			<if test="item.transferDescription != null">
				transfer_description,
			</if>
			<if test="item.version != null">
				version,
			</if>
			<if test="item.createTime != null">
				create_time,
			</if>
			<if test="item.updateTime != null">
				update_time,
			</if>
			<if test="item.isActive != null">
				is_active,
			</if>
			
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="item.transactionNo != null">
				#{item.transactionNo},
			</if>
			<if test="item.userId != null">
				#{item.userId},
			</if>
			<if test="item.amount != null">
				#{item.amount},
			</if>
			<if test="item.fromUserId != null">
				#{item.fromUserId},
			</if>
			<if test="item.toUserId != null">
				#{item.toUserId},
			</if>
			<if test="item.transferType != null">
				#{item.transferType},
			</if>
			<if test="item.transferDescription != null">
				#{item.transferDescription},
			</if>
			<if test="item.version != null">
				#{item.version},
			</if>
			<if test="item.createTime != null">
				#{item.createTime},
			</if>
			<if test="item.updateTime != null">
				#{item.updateTime},
			</if>
			<if test="item.isActive != null">
				#{item.isActive},
			</if>
			
            </trim>
        </foreach>
    </insert>

    <delete id="removeById" parameterType="long">
        delete from t_funds_transfer where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_funds_transfer where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="fundsTransferDO">
        update t_funds_transfer
        <set>
            <if test="transactionNo != null">
				transaction_no = #{transactionNo},
			</if>
			<if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="amount != null">
				amount = #{amount},
			</if>
			<if test="fromUserId != null">
				from_user_id = #{fromUserId},
			</if>
			<if test="toUserId != null">
				to_user_id = #{toUserId},
			</if>
			<if test="transferType != null">
				transfer_type = #{transferType},
			</if>
			<if test="transferDescription != null">
				transfer_description = #{transferDescription},
			</if>
			<if test="version != null">
				version = #{version},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="isActive != null">
				is_active = #{isActive},
			</if>
			update_time = CURRENT_TIMESTAMP,
        </set>
        where id = #{id} and version + 1 <![CDATA[<=]]> #{version}
    </update>

    <update id="updateBatch" parameterType="java.util.List">
    	<foreach collection="list" item="item" separator=";">
            update t_funds_transfer
            <set>
                <if test="item.transactionNo != null">
				transaction_no = #{item.transactionNo},
			</if>
			<if test="item.userId != null">
				user_id = #{item.userId},
			</if>
			<if test="item.amount != null">
				amount = #{item.amount},
			</if>
			<if test="item.fromUserId != null">
				from_user_id = #{item.fromUserId},
			</if>
			<if test="item.toUserId != null">
				to_user_id = #{item.toUserId},
			</if>
			<if test="item.transferType != null">
				transfer_type = #{item.transferType},
			</if>
			<if test="item.transferDescription != null">
				transfer_description = #{item.transferDescription},
			</if>
			<if test="item.version != null">
				version = #{item.version},
			</if>
			<if test="item.createTime != null">
				create_time = #{item.createTime},
			</if>
			<if test="item.updateTime != null">
				update_time = #{item.updateTime},
			</if>
			<if test="item.isActive != null">
				is_active = #{item.isActive},
			</if>
			update_time = CURRENT_TIMESTAMP,
                <if test="item.version == null">
                    version = version + 1,
                </if>
            </set>
            where id = #{item.id}
        </foreach>
    </update>

    <sql id="select_columns">
        id as id, transaction_no as transactionNo, user_id as userId, amount as amount, from_user_id as fromUserId, to_user_id as toUserId, transfer_type as transferType, transfer_description as transferDescription, version as version, create_time as createTime, update_time as updateTime, is_active as isActive
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.id != null">
			and id = #{query.id}
		</if>
		<if test="query != null and query.idMin != null and query.idMax == null">
			and id <![CDATA[ >= ]]> #{query.idMin}
		</if>
		<if test="query != null and query.idMin == null and query.idMax != null">
			and id <![CDATA[ <= ]]> #{query.idMax}
		</if>
		<if test="query != null and query.idMin != null and query.idMax != null">
			and id <![CDATA[ >= ]]> #{query.idMin} and id <![CDATA[ <= ]]> #{query.idMax}
		</if>
		<if test="query != null and query.transactionNo != null and query.transactionNo != ''">
			and transaction_no like concat('%', #{query.transactionNo}, '%')
		</if>
		<if test="query != null and query.userId != null">
			and user_id = #{query.userId}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax == null">
			and user_id <![CDATA[ >= ]]> #{query.userIdMin}
		</if>
		<if test="query != null and query.userIdMin == null and query.userIdMax != null">
			and user_id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax != null">
			and user_id <![CDATA[ >= ]]> #{query.userIdMin} and user_id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.amount != null">
			and amount = #{query.amount}
		</if>
		<if test="query != null and query.amountMin != null and query.amountMax == null">
			and amount <![CDATA[ >= ]]> #{query.amountMin}
		</if>
		<if test="query != null and query.amountMin == null and query.amountMax != null">
			and amount <![CDATA[ <= ]]> #{query.amountMax}
		</if>
		<if test="query != null and query.amountMin != null and query.amountMax != null">
			and amount <![CDATA[ >= ]]> #{query.amountMin} and amount <![CDATA[ <= ]]> #{query.amountMax}
		</if>
		<if test="query != null and query.fromUserId != null">
			and from_user_id = #{query.fromUserId}
		</if>
		<if test="query != null and query.fromUserIdMin != null and query.fromUserIdMax == null">
			and from_user_id <![CDATA[ >= ]]> #{query.fromUserIdMin}
		</if>
		<if test="query != null and query.fromUserIdMin == null and query.fromUserIdMax != null">
			and from_user_id <![CDATA[ <= ]]> #{query.fromUserIdMax}
		</if>
		<if test="query != null and query.fromUserIdMin != null and query.fromUserIdMax != null">
			and from_user_id <![CDATA[ >= ]]> #{query.fromUserIdMin} and from_user_id <![CDATA[ <= ]]> #{query.fromUserIdMax}
		</if>
		<if test="query != null and query.toUserId != null">
			and to_user_id = #{query.toUserId}
		</if>
		<if test="query != null and query.toUserIdMin != null and query.toUserIdMax == null">
			and to_user_id <![CDATA[ >= ]]> #{query.toUserIdMin}
		</if>
		<if test="query != null and query.toUserIdMin == null and query.toUserIdMax != null">
			and to_user_id <![CDATA[ <= ]]> #{query.toUserIdMax}
		</if>
		<if test="query != null and query.toUserIdMin != null and query.toUserIdMax != null">
			and to_user_id <![CDATA[ >= ]]> #{query.toUserIdMin} and to_user_id <![CDATA[ <= ]]> #{query.toUserIdMax}
		</if>
		<if test="query != null and query.transferType != null and query.transferType != ''">
			and transfer_type like concat('%', #{query.transferType}, '%')
		</if>
		<if test="query != null and query.transferDescription != null and query.transferDescription != ''">
			and transfer_description like concat('%', #{query.transferDescription}, '%')
		</if>
		<if test="query != null and query.version != null">
			and version = #{query.version}
		</if>
		<if test="query != null and query.versionMin != null and query.versionMax == null">
			and version <![CDATA[ >= ]]> #{query.versionMin}
		</if>
		<if test="query != null and query.versionMin == null and query.versionMax != null">
			and version <![CDATA[ <= ]]> #{query.versionMax}
		</if>
		<if test="query != null and query.versionMin != null and query.versionMax != null">
			and version <![CDATA[ >= ]]> #{query.versionMin} and version <![CDATA[ <= ]]> #{query.versionMax}
		</if>
		<if test="query != null and query.createTime != null">
			and create_time = #{query.createTime}
		</if>
		<if test="query != null and query.createTimeMin != null and query.createTimeMax == null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeMin}
		</if>
		<if test="query != null and query.createTimeMin == null and query.createTimeMax != null">
			and create_time <![CDATA[ <= ]]> #{query.createTimeMax}
		</if>
		<if test="query != null and query.createTimeMin != null and query.createTimeMax != null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeMin} and create_time <![CDATA[ <= ]]> #{query.createTimeMax}
		</if>
		<if test="query != null and query.updateTime != null">
			and update_time = #{query.updateTime}
		</if>
		<if test="query != null and query.updateTimeMin != null and query.updateTimeMax == null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeMin}
		</if>
		<if test="query != null and query.updateTimeMin == null and query.updateTimeMax != null">
			and update_time <![CDATA[ <= ]]> #{query.updateTimeMax}
		</if>
		<if test="query != null and query.updateTimeMin != null and query.updateTimeMax != null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeMin} and update_time <![CDATA[ <= ]]> #{query.updateTimeMax}
		</if>
		<if test="query != null and query.isActive != null">
			and is_active = #{query.isActive}
		</if>
		<if test="query != null and query.isActiveMin != null and query.isActiveMax == null">
			and is_active <![CDATA[ >= ]]> #{query.isActiveMin}
		</if>
		<if test="query != null and query.isActiveMin == null and query.isActiveMax != null">
			and is_active <![CDATA[ <= ]]> #{query.isActiveMax}
		</if>
		<if test="query != null and query.isActiveMin != null and query.isActiveMax != null">
			and is_active <![CDATA[ >= ]]> #{query.isActiveMin} and is_active <![CDATA[ <= ]]> #{query.isActiveMax}
		</if>
		
    </sql>

    <select id="getById" parameterType="long" resultType="fundsTransferDO">
        select
        <include refid="select_columns"/>
        from t_funds_transfer where id = #{id}
    </select>

    <select id="getVersionById" parameterType="long" resultType="integer">
        select version from t_funds_transfer where id = #{id}
    </select>

    <select id="listAll" resultType="fundsTransferDO">
        select
        <include refid="select_columns"/>
        from t_funds_transfer
        order by update_time desc, create_time desc
    </select>

    <select id="listAllByCondition" resultType="fundsTransferDO">
        select
        <include refid="select_columns"/>
        from t_funds_transfer
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
             ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            update_time desc, create_time desc
        </if>
    </select>

    <select id="listPageByCondition" resultType="fundsTransferDO">
        select
        <include refid="select_columns"/>
        from t_funds_transfer
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
            ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            update_time desc, create_time desc
        </if>
        limit #{query.beginIndex}, #{query.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_funds_transfer
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
