<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.SysLogDAO">

    <insert id="save" parameterType="sysLogDO">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
        insert into t_sys_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
				user_id,
			</if>
			<if test="userAccount != null">
				user_account,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="requestUrl != null">
				request_url,
			</if>
			<if test="requestMethod != null">
				request_method,
			</if>
			<if test="requestParams != null">
				request_params,
			</if>
			<if test="responseCode != null">
				response_code,
			</if>
			<if test="responseMsg != null">
				response_msg,
			</if>
			<if test="executeClass != null">
				execute_class,
			</if>
			<if test="executeMethod != null">
				execute_method,
			</if>
			<if test="executeTime != null">
				execute_time,
			</if>
			<if test="executeCostTime != null">
				execute_cost_time,
			</if>
			<if test="hasException != null">
				has_exception,
			</if>
			<if test="exceptionMsg != null">
				exception_msg,
			</if>
			<if test="executeIp != null">
				execute_ip,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="isActive != null">
				is_active,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
				#{userId},
			</if>
			<if test="userAccount != null">
				#{userAccount},
			</if>
			<if test="description != null">
				#{description},
			</if>
			<if test="requestUrl != null">
				#{requestUrl},
			</if>
			<if test="requestMethod != null">
				#{requestMethod},
			</if>
			<if test="requestParams != null">
				#{requestParams},
			</if>
			<if test="responseCode != null">
				#{responseCode},
			</if>
			<if test="responseMsg != null">
				#{responseMsg},
			</if>
			<if test="executeClass != null">
				#{executeClass},
			</if>
			<if test="executeMethod != null">
				#{executeMethod},
			</if>
			<if test="executeTime != null">
				#{executeTime},
			</if>
			<if test="executeCostTime != null">
				#{executeCostTime},
			</if>
			<if test="hasException != null">
				#{hasException},
			</if>
			<if test="exceptionMsg != null">
				#{exceptionMsg},
			</if>
			<if test="executeIp != null">
				#{executeIp},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="isActive != null">
				#{isActive},
			</if>
			
        </trim>
    </insert>

    <insert id="saveBatch" parameterType="java.util.List">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
    	<foreach collection="list" item="item" separator=";">
            insert into t_sys_log
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.userId != null">
				user_id,
			</if>
			<if test="item.userAccount != null">
				user_account,
			</if>
			<if test="item.description != null">
				description,
			</if>
			<if test="item.requestUrl != null">
				request_url,
			</if>
			<if test="item.requestMethod != null">
				request_method,
			</if>
			<if test="item.requestParams != null">
				request_params,
			</if>
			<if test="item.responseCode != null">
				response_code,
			</if>
			<if test="item.responseMsg != null">
				response_msg,
			</if>
			<if test="item.executeClass != null">
				execute_class,
			</if>
			<if test="item.executeMethod != null">
				execute_method,
			</if>
			<if test="item.executeTime != null">
				execute_time,
			</if>
			<if test="item.executeCostTime != null">
				execute_cost_time,
			</if>
			<if test="item.hasException != null">
				has_exception,
			</if>
			<if test="item.exceptionMsg != null">
				exception_msg,
			</if>
			<if test="item.executeIp != null">
				execute_ip,
			</if>
			<if test="item.createTime != null">
				create_time,
			</if>
			<if test="item.updateTime != null">
				update_time,
			</if>
			<if test="item.isActive != null">
				is_active,
			</if>
			
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="item.userId != null">
				#{item.userId},
			</if>
			<if test="item.userAccount != null">
				#{item.userAccount},
			</if>
			<if test="item.description != null">
				#{item.description},
			</if>
			<if test="item.requestUrl != null">
				#{item.requestUrl},
			</if>
			<if test="item.requestMethod != null">
				#{item.requestMethod},
			</if>
			<if test="item.requestParams != null">
				#{item.requestParams},
			</if>
			<if test="item.responseCode != null">
				#{item.responseCode},
			</if>
			<if test="item.responseMsg != null">
				#{item.responseMsg},
			</if>
			<if test="item.executeClass != null">
				#{item.executeClass},
			</if>
			<if test="item.executeMethod != null">
				#{item.executeMethod},
			</if>
			<if test="item.executeTime != null">
				#{item.executeTime},
			</if>
			<if test="item.executeCostTime != null">
				#{item.executeCostTime},
			</if>
			<if test="item.hasException != null">
				#{item.hasException},
			</if>
			<if test="item.exceptionMsg != null">
				#{item.exceptionMsg},
			</if>
			<if test="item.executeIp != null">
				#{item.executeIp},
			</if>
			<if test="item.createTime != null">
				#{item.createTime},
			</if>
			<if test="item.updateTime != null">
				#{item.updateTime},
			</if>
			<if test="item.isActive != null">
				#{item.isActive},
			</if>
			
            </trim>
        </foreach>
    </insert>

    <delete id="removeById" parameterType="long">
        delete from t_sys_log where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_sys_log where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="sysLogDO">
        update t_sys_log
        <set>
            <if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="userAccount != null">
				user_account = #{userAccount},
			</if>
			<if test="description != null">
				description = #{description},
			</if>
			<if test="requestUrl != null">
				request_url = #{requestUrl},
			</if>
			<if test="requestMethod != null">
				request_method = #{requestMethod},
			</if>
			<if test="requestParams != null">
				request_params = #{requestParams},
			</if>
			<if test="responseCode != null">
				response_code = #{responseCode},
			</if>
			<if test="responseMsg != null">
				response_msg = #{responseMsg},
			</if>
			<if test="executeClass != null">
				execute_class = #{executeClass},
			</if>
			<if test="executeMethod != null">
				execute_method = #{executeMethod},
			</if>
			<if test="executeTime != null">
				execute_time = #{executeTime},
			</if>
			<if test="executeCostTime != null">
				execute_cost_time = #{executeCostTime},
			</if>
			<if test="hasException != null">
				has_exception = #{hasException},
			</if>
			<if test="exceptionMsg != null">
				exception_msg = #{exceptionMsg},
			</if>
			<if test="executeIp != null">
				execute_ip = #{executeIp},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="isActive != null">
				is_active = #{isActive},
			</if>
			update_time = CURRENT_TIMESTAMP,
        </set>
        where id = #{id}
    </update>

    <update id="updateBatch" parameterType="java.util.List">
    	<foreach collection="list" item="item" separator=";">
            update t_sys_log
            <set>
                <if test="item.userId != null">
				user_id = #{item.userId},
			</if>
			<if test="item.userAccount != null">
				user_account = #{item.userAccount},
			</if>
			<if test="item.description != null">
				description = #{item.description},
			</if>
			<if test="item.requestUrl != null">
				request_url = #{item.requestUrl},
			</if>
			<if test="item.requestMethod != null">
				request_method = #{item.requestMethod},
			</if>
			<if test="item.requestParams != null">
				request_params = #{item.requestParams},
			</if>
			<if test="item.responseCode != null">
				response_code = #{item.responseCode},
			</if>
			<if test="item.responseMsg != null">
				response_msg = #{item.responseMsg},
			</if>
			<if test="item.executeClass != null">
				execute_class = #{item.executeClass},
			</if>
			<if test="item.executeMethod != null">
				execute_method = #{item.executeMethod},
			</if>
			<if test="item.executeTime != null">
				execute_time = #{item.executeTime},
			</if>
			<if test="item.executeCostTime != null">
				execute_cost_time = #{item.executeCostTime},
			</if>
			<if test="item.hasException != null">
				has_exception = #{item.hasException},
			</if>
			<if test="item.exceptionMsg != null">
				exception_msg = #{item.exceptionMsg},
			</if>
			<if test="item.executeIp != null">
				execute_ip = #{item.executeIp},
			</if>
			<if test="item.createTime != null">
				create_time = #{item.createTime},
			</if>
			<if test="item.updateTime != null">
				update_time = #{item.updateTime},
			</if>
			<if test="item.isActive != null">
				is_active = #{item.isActive},
			</if>
			update_time = CURRENT_TIMESTAMP,
            </set>
            where id = #{item.id}
        </foreach>
    </update>

    <sql id="select_columns">
        id as id, user_id as userId, user_account as userAccount, description as description, request_url as requestUrl, request_method as requestMethod, request_params as requestParams, response_code as responseCode, response_msg as responseMsg, execute_class as executeClass, execute_method as executeMethod, execute_time as executeTime, execute_cost_time as executeCostTime, has_exception as hasException, exception_msg as exceptionMsg, execute_ip as executeIp, create_time as createTime, update_time as updateTime, is_active as isActive
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.id != null">
			id = #{query.id}
		</if>
		<if test="query != null and query.idMin != null and query.idMax == null">
			id <![CDATA[ >= ]]> #{query.idMin}
		</if>
		<if test="query != null and query.idMin == null and query.idMax != null">
			id <![CDATA[ <= ]]> #{query.idMax}
		</if>
		<if test="query != null and query.idMin != null and query.idMax != null">
			id <![CDATA[ >= ]]> #{query.idMin} and id <![CDATA[ <= ]]> #{query.idMax}
		</if>
		<if test="query != null and query.userId != null">
			and user_id = #{query.userId}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax == null">
			and user_id <![CDATA[ >= ]]> #{query.userIdMin}
		</if>
		<if test="query != null and query.userIdMin == null and query.userIdMax != null">
			and user_id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.userIdMin != null and query.userIdMax != null">
			and user_id <![CDATA[ >= ]]> #{query.userIdMin} and user_id <![CDATA[ <= ]]> #{query.userIdMax}
		</if>
		<if test="query != null and query.userAccount != null and query.userAccount != ''">
			and user_account like concat('%', #{query.userAccount}, '%')
		</if>
		<if test="query != null and query.description != null and query.description != ''">
			and description like concat('%', #{query.description}, '%')
		</if>
		<if test="query != null and query.requestUrl != null and query.requestUrl != ''">
			and request_url like concat('%', #{query.requestUrl}, '%')
		</if>
		<if test="query != null and query.requestMethod != null and query.requestMethod != ''">
			and request_method like concat('%', #{query.requestMethod}, '%')
		</if>
		<if test="query != null and query.requestParams != null and query.requestParams != ''">
			and request_params like concat('%', #{query.requestParams}, '%')
		</if>
		<if test="query != null and query.responseCode != null">
			and response_code = #{query.responseCode}
		</if>
		<if test="query != null and query.responseCodeMin != null and query.responseCodeMax == null">
			and response_code <![CDATA[ >= ]]> #{query.responseCodeMin}
		</if>
		<if test="query != null and query.responseCodeMin == null and query.responseCodeMax != null">
			and response_code <![CDATA[ <= ]]> #{query.responseCodeMax}
		</if>
		<if test="query != null and query.responseCodeMin != null and query.responseCodeMax != null">
			and response_code <![CDATA[ >= ]]> #{query.responseCodeMin} and response_code <![CDATA[ <= ]]> #{query.responseCodeMax}
		</if>
		<if test="query != null and query.responseMsg != null and query.responseMsg != ''">
			and response_msg like concat('%', #{query.responseMsg}, '%')
		</if>
		<if test="query != null and query.executeClass != null and query.executeClass != ''">
			and execute_class like concat('%', #{query.executeClass}, '%')
		</if>
		<if test="query != null and query.executeMethod != null and query.executeMethod != ''">
			and execute_method like concat('%', #{query.executeMethod}, '%')
		</if>
		<if test="query != null and query.executeTime != null">
			and execute_time = #{query.executeTime}
		</if>
		<if test="query != null and query.executeTimeMin != null and query.executeTimeMax == null">
			and execute_time <![CDATA[ >= ]]> #{query.executeTimeMin}
		</if>
		<if test="query != null and query.executeTimeMin == null and query.executeTimeMax != null">
			and execute_time <![CDATA[ <= ]]> #{query.executeTimeMax}
		</if>
		<if test="query != null and query.executeTimeMin != null and query.executeTimeMax != null">
			and execute_time <![CDATA[ >= ]]> #{query.executeTimeMin} and execute_time <![CDATA[ <= ]]> #{query.executeTimeMax}
		</if>
		<if test="query != null and query.executeCostTime != null">
			and execute_cost_time = #{query.executeCostTime}
		</if>
		<if test="query != null and query.executeCostTimeMin != null and query.executeCostTimeMax == null">
			and execute_cost_time <![CDATA[ >= ]]> #{query.executeCostTimeMin}
		</if>
		<if test="query != null and query.executeCostTimeMin == null and query.executeCostTimeMax != null">
			and execute_cost_time <![CDATA[ <= ]]> #{query.executeCostTimeMax}
		</if>
		<if test="query != null and query.executeCostTimeMin != null and query.executeCostTimeMax != null">
			and execute_cost_time <![CDATA[ >= ]]> #{query.executeCostTimeMin} and execute_cost_time <![CDATA[ <= ]]> #{query.executeCostTimeMax}
		</if>
		<if test="query != null and query.hasException != null">
			and has_exception = #{query.hasException}
		</if>
		<if test="query != null and query.hasExceptionMin != null and query.hasExceptionMax == null">
			and has_exception <![CDATA[ >= ]]> #{query.hasExceptionMin}
		</if>
		<if test="query != null and query.hasExceptionMin == null and query.hasExceptionMax != null">
			and has_exception <![CDATA[ <= ]]> #{query.hasExceptionMax}
		</if>
		<if test="query != null and query.hasExceptionMin != null and query.hasExceptionMax != null">
			and has_exception <![CDATA[ >= ]]> #{query.hasExceptionMin} and has_exception <![CDATA[ <= ]]> #{query.hasExceptionMax}
		</if>
		<if test="query != null and query.exceptionMsg != null and query.exceptionMsg != ''">
			and exception_msg like concat('%', #{query.exceptionMsg}, '%')
		</if>
		<if test="query != null and query.executeIp != null and query.executeIp != ''">
			and execute_ip like concat('%', #{query.executeIp}, '%')
		</if>
		<if test="query != null and query.createTime != null">
			and create_time = #{query.createTime}
		</if>
		<if test="query != null and query.createTimeMin != null and query.createTimeMax == null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeMin}
		</if>
		<if test="query != null and query.createTimeMin == null and query.createTimeMax != null">
			and create_time <![CDATA[ <= ]]> #{query.createTimeMax}
		</if>
		<if test="query != null and query.createTimeMin != null and query.createTimeMax != null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeMin} and create_time <![CDATA[ <= ]]> #{query.createTimeMax}
		</if>
		<if test="query != null and query.updateTime != null">
			and update_time = #{query.updateTime}
		</if>
		<if test="query != null and query.updateTimeMin != null and query.updateTimeMax == null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeMin}
		</if>
		<if test="query != null and query.updateTimeMin == null and query.updateTimeMax != null">
			and update_time <![CDATA[ <= ]]> #{query.updateTimeMax}
		</if>
		<if test="query != null and query.updateTimeMin != null and query.updateTimeMax != null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeMin} and update_time <![CDATA[ <= ]]> #{query.updateTimeMax}
		</if>
		<if test="query != null and query.isActive != null">
			and is_active = #{query.isActive}
		</if>
		<if test="query != null and query.isActiveMin != null and query.isActiveMax == null">
			and is_active <![CDATA[ >= ]]> #{query.isActiveMin}
		</if>
		<if test="query != null and query.isActiveMin == null and query.isActiveMax != null">
			and is_active <![CDATA[ <= ]]> #{query.isActiveMax}
		</if>
		<if test="query != null and query.isActiveMin != null and query.isActiveMax != null">
			and is_active <![CDATA[ >= ]]> #{query.isActiveMin} and is_active <![CDATA[ <= ]]> #{query.isActiveMax}
		</if>
		
    </sql>

    <select id="getById" parameterType="long" resultType="sysLogDO">
        select
        <include refid="select_columns"/>
        from t_sys_log where id = #{id}
    </select>

    <select id="listAll" resultType="sysLogDO">
        select
        <include refid="select_columns"/>
        from t_sys_log
        order by update_time desc, create_time desc
    </select>

    <select id="listPageByCondition" resultType="sysLogDO">
        select
        <include refid="select_columns"/>
        from t_sys_log
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
            ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            update_time desc, create_time desc
        </if>
        limit #{query.beginIndex}, #{query.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_sys_log
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
